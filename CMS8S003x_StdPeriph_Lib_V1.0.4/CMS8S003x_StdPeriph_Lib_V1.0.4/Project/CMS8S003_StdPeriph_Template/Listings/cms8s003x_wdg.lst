C51 COMPILER V9.59.0.0   CMS8S003X_WDG                                                     06/27/2018 00:53:10 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE CMS8S003X_WDG
OBJECT MODULE PLACED IN .\Objects\cms8s003x_wdg.obj
COMPILER INVOKED BY: D:\Install software\keil5\C51\BIN\C51.EXE ..\..\Libraries\CMS8S003_StdPeriph_Driver\src\cms8s003x_w
                    -dg.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Libraries\CMS8S003_StdPeriph_Driver\inc) DEBUG PRINT(.\Listings\cms8s003
                    -x_wdg.lst) TABS(2) OBJECT(.\Objects\cms8s003x_wdg.obj)

line level    source

   1          /**
   2            ********************************************************************************
   3            * @file    cms8s003x_wdg.c
   4            * @author  LI WEI
   5            * @version V1.0.3
   6            * @date    04/24/2018
   7            * @brief   This file provides all the WDG firmware functions.
   8            ******************************************************************************
   9            * @copy
  10            *
  11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13            * TIME. AS A RESULT, CMSemicon SHALL NOT BE HELD LIABLE FOR ANY
  14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17            *
  18            * <h2><center>&copy; COPYRIGHT 2018 CMSemicon</center></h2>
  19            */
  20          
  21          /* Includes ------------------------------------------------------------------*/
  22          #include "cms8s003x_wdg.h"
  23          
  24          /** @addtogroup CMS8S003x_StdPeriph_Driver
  25            * @{
  26            */
  27          
  28          /* Private typedef -----------------------------------------------------------*/
  29          /* Private define ------------------------------------------------------------*/
  30          
  31          /* Private macro -------------------------------------------------------------*/
  32          /* Private variables ---------------------------------------------------------*/
  33          /* Private function prototypes -----------------------------------------------*/
  34          /* Private functions ---------------------------------------------------------*/
  35          /* Public functions ----------------------------------------------------------*/
  36          
  37          /** @addtogroup WDG_Public_Functions
  38            * @{
  39            */
  40          
  41          /**
  42            * @brief  Initializes the WWDG peripheral.
  43            *         This function set Window Register = WindowValue, Counter Register
  44            *         according to Counter and \b ENABLE \b WWDG
  45            * @param  Counter : WWDG counter value
  46            * @param  WindowValue : specifies the WWDG Window Register, range is 0x00 to 0x7F.
  47            * @retval None
  48            */
  49          void WDG_Init(WDG_Init_TypeDef *WDG_Init)
  50          {
  51   1        WDCON = (uint8_t)WDG_Init->WDG_Clear;
  52   1        CKCON |= (uint8_t)WDG_Init->WDG_OverflowTime;
  53   1      }
C51 COMPILER V9.59.0.0   CMS8S003X_WDG                                                     06/27/2018 00:53:10 PAGE 2   

  54          
  55          /**
  56            * @brief  Enables WWDG and load the counter value.
  57            * @param  Counter: specifies the watchdog counter value.
  58            *         This parameter must be a number between 0x40 and 0x7F.
  59            * @retval None
  60            */
  61          void WDG_Enable(void)
  62          {
  63   1        WDCON |= WDG_RESET_ENABLE_BIT;
  64   1      }
  65          
  66          /**
  67            * @brief  Enables WWDG and load the counter value.
  68            * @param  Counter: specifies the watchdog counter value.
  69            *         This parameter must be a number between 0x40 and 0x7F.
  70            * @retval None
  71            */
  72          void WDG_Disable(void)
  73          {
  74   1        WDCON &= ~WDG_RESET_ENABLE_BIT;
  75   1      }
  76          
  77          /**
  78            * @brief Gets the WWDG Counter Value.
  79            *        This value could be used to check if WWDG is in the window, where
  80            *        refresh is allowed.
  81            * @param  None
  82            * @retval WWDG Counter Value
  83            */
  84          uint8_t WDG_GetCounter(void)
  85          {
  86   1        return 0;
  87   1      }
  88          
  89          ITStatus WDG_GetITStatus(WDG_Flag_TypeDef WDG_Flag)
  90          {
  91   1        ITStatus bitstatus = _RESET;
  92   1        
  93   1        if ((WDCON & WDG_Flag) != (uint8_t)_RESET )
  94   1        {
  95   2          bitstatus = _SET;
  96   2        }
  97   1        else
  98   1        {
  99   2          bitstatus = _RESET;
 100   2        }
 101   1      
 102   1        /* Return the USART_IT status*/
 103   1        return  bitstatus;
 104   1      }
 105          
 106          void WDG_ClearITPendingBit(WDG_Flag_TypeDef WDG_Flag)
 107          {
 108   1        WDCON &= (uint8_t)(~WDG_Flag);
 109   1      }
 110          
 111          /**
 112            * @}
 113            */
 114          
 115          /**
C51 COMPILER V9.59.0.0   CMS8S003X_WDG                                                     06/27/2018 00:53:10 PAGE 3   

 116            * @}
 117            */
 118          
 119          /******************* (C) COPYRIGHT 2018 CMSemicon *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     45    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
